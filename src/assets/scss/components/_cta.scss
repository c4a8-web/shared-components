:root {
  --cta-loading-spacing: #{spacing(12)};
}

.hover__parent:hover .cta,
.shared-components .cta:hover {
  box-shadow: none;
  color: var(--color-primary-accent);

  &.cta--external {
    .icon svg {
      @include move-top-right;
    }
  }

  &.cta--download {
    .icon svg {
      animation: ctaDownload;
      animation-duration: 0.4s;
      animation-fill-mode: forwards;
      animation-timing-function: $animation-transition;
    }
  }

  &.link {
    &:not(.cta--external) {
      svg {
        @include move-right-left;

        stroke: var(--color-svg-icon--hover);
      }
    }

    .cta__text {
      font-weight: bold;
    }
  }

  &:not(.btn):not(.custom):not(.nav-link) {
    &.is-light {
      color: var(--color-white);
    }
  }

  &.btn-primary {
    &.is-light {
      &:not(label.btn):not([href]) {
        background-color: var(--color-primary-accent-light);
        color: var(--color-primary-accent);
      }

      background-color: var(--color-primary-accent-light);
      color: var(--color-primary-accent);
    }

    &::after {
      opacity: 1;
      background-position: left bottom;
    }
  }

  &.btn-secondary {
    border-color: var(--color-primary-accent);
    color: var(--color-primary-accent);

    &.is-cutoff {
      &::before {
        background: var(--color-primary-accent);
      }
    }

    &.is-light {
      border-color: var(--color-white);
      color: var(--color-primary-accent);

      &::before {
        background: var(--color-white);
      }

      &::after {
        opacity: 1;
        background-position: left bottom;
      }
    }
  }
}

.cta {
  --cta-active-size: 3px;

  position: relative;
  border-radius: 0;

  &.is-loading,
  .is-loading & {
    --cta-loading-delay: 0.4s;
    --cta-loading-start-duration: 1.1s;

    &:active,
    &:focus {
      -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
      box-shadow: none;
    }

    pointer-events: none;
    opacity: 0.8;
    animation: ctaLoadingButton 1s forwards;

    &::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: var(--color-primary);
      transform-origin: center;
      animation:
        ctaLoadingStart var(--cta-loading-start-duration) forwards var(--cta-loading-delay),
        ctaLoadingLoop calc(var(--cta-loading-start-duration) - 0.1s) ease-in-out infinite
          calc(var(--cta-loading-delay) + var(--cta-loading-start-duration) - 0.2s);
    }

    .cta__text {
      position: relative;
      animation: ctaLoadingText var(--cta-loading-start-duration) forwards;
    }
  }

  &.cta--has-icon,
  &.cta--download,
  &.cta--external {
    &::after,
    &.btn {
      padding-right: spacing(12);
      text-align: left;
      padding-left: spacing(4);
    }

    &:not(.link) {
      .icon {
        position: absolute;
        width: 16px;
        height: 16px;
        top: calc(50% - 1px);
        transform: translateY(-50%);
        right: spacing(4);
        z-index: 2;
      }
    }
  }

  &.cta--external {
    &.link {
      .icon {
        padding-left: spacing(2);
        width: 20px;
        height: 20px;
      }
    }
  }

  &.cta--reversed {
    flex-direction: row-reverse;

    &.link {
      align-items: flex-start;

      .icon {
        --cta-icon-offset: -3px;

        height: calc(var(--type-default-line-height) * 1rem + var(--cta-icon-offset));

        @include media-breakpoint-up(lg) {
          --cta-icon-offset: 2px;
        }
      }

      svg {
        margin: 0 spacing(3) 0 0;
        width: spacing(4);
        height: spacing(4);
        line-height: 2rem;

        @include media-breakpoint-up(lg) {
          margin-right: spacing(4);
          width: spacing(5);
          height: spacing(5);
        }
      }
    }
  }

  &.cta--download {
    &:not(.link) {
      .icon {
        transform: translateY(-50%) rotate(135deg);
        width: 14px;
        height: 14px;
      }
    }
  }

  &.btn {
    @include font-style('font-size-1');

    font-weight: bold;
    display: inline-block;
    padding: spacing(3) spacing(4);
    text-align: center;
    vertical-align: middle;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    background-color: transparent;
    transition: all $transition-tween-t1;
    border: 0.0625rem solid transparent;

    &:not(:disabled):not(.disabled) {
      cursor: pointer;
    }
  }

  &.link {
    font-size: $font-size-base;
    display: inline-flex;
    align-items: center;

    &:not(:last-of-type) {
      margin-right: 0.5rem;
    }

    &:not(.cta--reversed):not(.cta--external) {
      svg {
        margin: 0 0 0 spacing(3);
        stroke: var(--color-primary);
      }
    }
  }

  &.cta--has-icon {
    &.cta--icon-emergency {
      &::after,
      &.btn {
        padding-right: spacing(16);
      }

      .icon {
        --icon-scale: 2.3;

        right: spacing(6);

        svg {
          stroke-width: 0.3;
          stroke: currentColor;
        }
      }
    }
  }
}

@mixin cta-no-btn-is-light {
  color: var(--color-white);
}

@mixin cta-btn-primary-is-light {
  color: var(--color-primary);
  background-color: var(--color-white);

  &:not(label.btn):not([href]) {
    color: var(--color-primary);
    background-color: var(--color-white);
  }

  &::after {
    display: none;
  }
}

@mixin cta-btn-secondary-is-light {
  border-color: var(--color-white);
  color: var(--color-white);

  &::before {
    background: var(--color-white);
  }

  &::after {
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    content: attr(data-text);
    color: var(--color-primary-accent);
    display: flex;
    justify-content: center;
    align-items: center;
    background: linear-gradient(to right, rgba(255, 255, 255, 0.8) 50%, transparent 50%);
    background-size: 200% 100%;
    background-position: right bottom;
    opacity: 0;
    transition: background 0.5s $animation-transition;
  }
}

.shared-components {
  $cutoffSize: 15px;

  .cta {
    color: var(--color-primary);
    -webkit-appearance: none;
    appearance: none;

    &.cta--monochrome {
      color: var(--color-copy);
    }

    &:not(.btn):not(.custom):not(.nav-link) {
      &.is-light {
        @include cta-no-btn-is-light;
      }
    }

    &.is-cutoff:not(.link) {
      clip-path: polygon(calc(100% - #{$cutoffSize}) 0, 100% #{$cutoffSize}, 100% 100%, 0 100%, 0 0);
      position: relative;
    }

    &.btn-primary {
      background-color: var(--color-primary);
      color: var(--color-white);
      border: 0;

      &:not(label.btn):not([href]) {
        background-color: var(--color-primary);
        color: var(--color-white);
      }

      &::after {
        position: absolute;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        content: attr(data-text);
        color: var(--color-white);
        display: flex;
        justify-content: center;
        align-items: center;
        background: linear-gradient(to right, var(--color-primary-accent) 50%, transparent 50%);
        background-size: 200% 100%;
        background-position: right bottom;
        opacity: 0;
        transition: background 0.5s $animation-transition;
      }

      &.is-light {
        @include cta-btn-primary-is-light;
      }

      &.is-light-lg {
        @include media-breakpoint-up(lg) {
          @include cta-btn-primary-is-light;
        }
      }
    }

    &.btn-secondary {
      background-color: transparent;
      border-color: var(--color-primary);
      color: var(--color-primary);

      &.is-cutoff {
        &::before {
          clip-path: polygon(calc(100% - #{$cutoffSize} + 1px) 0, 100% calc(#{$cutoffSize} - 1px), 100% 100%, 100% 0);
          background: var(--color-primary);
          content: '';
          position: absolute;
          left: 0;
          top: 0;
          right: 0;
          height: 100%;
          display: block;
          transition: background 0.5s $animation-transition;
        }
      }

      &.cta--has-background {
        background-color: rgba(255, 255, 255, 0.9);
      }

      &.is-light {
        @include cta-btn-secondary-is-light;
      }

      &.is-light-lg {
        @include media-breakpoint-up(lg) {
          @include cta-btn-secondary-is-light;
        }
      }
    }

    &.active {
      color: var(--color-active);
    }
  }
}

.cta__text {
  position: relative;
}

cta {
  @include vue-loading;
}

@keyframes ctaDownload {
  0% {
    transform: translateX(0%);
  }

  30% {
    transform: translateX(20%) translateY(-10%);
  }

  100% {
    transform: translateX(0%);
  }
}

@keyframes ctaLoadingLoop {
  30%,
  0% {
    transform: translateX(-50%) rotate(-180deg);
  }

  100% {
    transform: translateX(-50%) rotate(0deg);
  }
}

@keyframes ctaLoadingStart {
  0% {
    max-width: 1000px;
    max-height: 200px;
    left: 0;
  }

  90%,
  100% {
    max-width: var(--cta-loading-spacing);
    max-height: var(--cta-loading-spacing);
    left: 50%;
    transform: translateX(-50%);
  }
}

@keyframes ctaLoadingText {
  0%,
  20% {
    opacity: 1;
  }

  100% {
    opacity: 0;
  }
}

@keyframes ctaLoadingButton {
  0% {
    background-color: inherit;
  }

  100% {
    background-color: transparent;
  }
}
